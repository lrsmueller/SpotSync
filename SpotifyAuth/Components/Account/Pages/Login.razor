@page "/Account/Login"

@attribute [AllowAnonymous]

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using SpotifyAuth.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Log in</PageTitle>

<h1>Log in</h1>
<div class="row">
     <form class="" action="Account/PerformExternalLogin" method="post">
        <div>
            <AntiforgeryToken />
            <input type="hidden" name="ReturnUrl" value="@ReturnUrl" />
            <button type="submit" class="btn btn-primary" name="provider" 
                    value="@SpotifyLoginProvider.Name"  title="Login using Spotify">
                Login using Spotify
            </button>
        </div>
    </form>
</div>

@code {
    private string? errorMessage;

    private AuthenticationScheme? SpotifyLoginProvider;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            // Clear the existing external cookie to ensure a clean login process
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
            SpotifyLoginProvider = (await SignInManager.GetExternalAuthenticationSchemesAsync()).FirstOrDefault() ?? throw new ArgumentNullException("Spotify Login could not be found");
        }

        
    }
}
