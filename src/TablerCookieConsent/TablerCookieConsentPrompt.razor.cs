// <auto-generated/>
using BytexDigital.Blazor.Components.CookieConsent;
using BytexDigital.Blazor.Components.CookieConsent.Dialogs.Prompt;
using BytexDigital.Blazor.Components.CookieConsent.Dialogs.Prompt.Default;
using Microsoft.AspNetCore.Components;
using Microsoft.Extensions.Options;
using System.Globalization;

namespace TablerCookieConsent﻿;

public partial class TablerCookieConsentPrompt : CookieConsentPromptComponentBase
{
    [Inject] protected IOptions<CookieConsentOptions> Options { get; set; }

    protected TablerCookieConsentPromptVariant VariantOptions => Options.Value.ConsentPromptVariant as TablerCookieConsentPromptVariant;

    [Inject] protected CookieConsentService CookieConsentService { get; set; }
    [Inject] protected CookieConsentLocalizer Localizer { get; set; }

    private bool OnlyRequiredCategoriesExist => Options.Value.Categories.All(x => x.IsRequired);
    private string CultureCode => CultureInfo.CurrentCulture.TwoLetterISOLanguageName;
    private string DefaultCultureCode => "en";

    protected override void OnInitialized()
    {
        if (Options.Value.ConsentPromptVariant.GetType() != typeof(TablerCookieConsentPromptVariant))
        {
            throw new InvalidOperationException($"{nameof(CookieConsentOptions)}.{nameof(CookieConsentOptions.ConsentPromptVariant)} must be of type {nameof(TablerCookieConsentPromptVariant)}");
        }
    }

    private async Task OpenSettingsAsync()
    {
        await CookieConsentService.ShowPreferencesModalAsync();
        StateHasChanged();
    }

    private async Task AcceptAsync(bool all)
    {
        if (all)
        {
            await CookieConsentService.SavePreferencesAcceptAllAsync();
        }
        else
        {
            await CookieConsentService.SavePreferencesNecessaryOnlyAsync();
        }

        await OnClosePrompt.InvokeAsync();

        StateHasChanged();
    }

}